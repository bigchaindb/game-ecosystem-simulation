{"remainingRequest":"/Users/jpregelj/eots/frontend/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/jpregelj/eots/frontend/node_modules/iota.lib.js/lib/errors/inputErrors.js","dependencies":[{"path":"/Users/jpregelj/eots/frontend/node_modules/iota.lib.js/lib/errors/inputErrors.js","mtime":1517179453000},{"path":"/Users/jpregelj/eots/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/jpregelj/eots/frontend/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["\nmodule.exports = {\n\n    invalidAddress: function () {\n        return new Error(\"Invalid address provided\");\n    },\n    invalidTrytes: function() {\n        return new Error(\"Invalid Trytes provided\");\n    },\n    invalidSeed: function() {\n        return new Error(\"Invalid Seed provided\");\n    },\n    invalidIndex: function() {\n        return new Error(\"Invalid Index option provided\");\n    }, \n    invalidSecurity: function() {\n        return new Error(\"Invalid Security option provided\");\n    },\n    invalidChecksum: function(address) {\n        return new Error(\"Invalid Checksum supplied for address: \" + address)\n    },\n    invalidAttachedTrytes: function() {\n        return new Error(\"Invalid attached Trytes provided\");\n    },\n    invalidTransfers: function() {\n        return new Error(\"Invalid transfers object\");\n    },\n    invalidKey: function() {\n        return new Error(\"You have provided an invalid key value\");\n    },\n    invalidTrunkOrBranch: function(hash) {\n        return new Error(\"You have provided an invalid hash as a trunk/branch: \" + hash);\n    },\n    invalidUri: function(uri) {\n        return new Error(\"You have provided an invalid URI for your Neighbor: \" + uri)\n    },\n    notInt: function() {\n        return new Error(\"One of your inputs is not an integer\");\n    },\n    invalidInputs: function() {\n        return new Error(\"Invalid inputs provided\");\n    },\n    inconsistentSubtangle: function (tail) {\n        return new Error(\"Inconsistent subtangle: \" + tail);\n    }\n}\n",null]}